{"version":3,"sources":["index.js"],"names":["options","colors","enableTooltip","deterministic","fontFamily","fontSizes","fontStyle","fontWeight","padding","rotations","rotationAngles","scale","spiral","transitionDuration","WordCloud","props","state","error","isLoaded","wordValues","fetch","then","res","json","result","setState","this","items","message","style","height","width","words","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8LAOMA,G,YAAU,CACdC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEC,eAAe,EACfC,eAAe,EACfC,WAAY,SACZC,UAAW,CAAC,EAAG,IACfC,UAAW,SACXC,WAAY,SACZC,QAAS,EACTC,UAAW,EACXC,eAAgB,CAAC,EAAG,IACpBC,MAAO,OACPC,OAAQ,cACRC,mBAAoB,MAGhBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,WAAY,IALG,E,gEASE,IAAD,OAClBC,MAAM,gCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKC,SAAS,CACZP,UAAU,EACVC,WAAYK,EAAOL,gBAMvB,SAACF,GACC,EAAKQ,SAAS,CACZP,UAAU,EACVD,e,+BAMA,IAAD,EAC4BS,KAAKV,MAAhCC,EADD,EACCA,MAAOC,EADR,EACQA,SADR,EACkBS,MACzB,OAAIV,EACK,0CAAaA,EAAMW,WAChBV,EAIR,gCACE,sEACA,qBAAKW,MAAO,CAAEC,OAAQ,IAAKC,MAAO,KAAlC,SACE,cAAC,IAAD,CAAgB/B,QAASA,EAASgC,MAAOb,kBANxC,iD,GArCWc,IAAMC,WAoDxBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACzB,EAAD,IAAeqB,I","file":"static/js/main.ecc39dd0.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactWordcloud from \"react-wordcloud\";\n\nimport \"tippy.js/dist/tippy.css\";\nimport \"tippy.js/animations/scale.css\";\n\nconst options = {\n  colors: [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\"],\n  enableTooltip: true,\n  deterministic: false,\n  fontFamily: \"impact\",\n  fontSizes: [5, 60],\n  fontStyle: \"normal\",\n  fontWeight: \"normal\",\n  padding: 1,\n  rotations: 0,\n  rotationAngles: [0, 90],\n  scale: \"sqrt\",\n  spiral: \"archimedean\",\n  transitionDuration: 1000\n};\n\nclass WordCloud extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      wordValues: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://kyle.evans.dev/words\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            wordValues: result.wordValues\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <p>Configure options in the code editor!</p>\n          <div style={{ height: 400, width: 600 }}>\n            <ReactWordcloud options={options} words={wordValues} />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<WordCloud />, rootElement);\n"],"sourceRoot":""}